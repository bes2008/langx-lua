---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by fangjinuo.
--- DateTime: 2021/3/1 14:22
---

local Objs = require("Objs")
local StringTemplate = require("text.StringTemplate")

local StringTemplates = {}

function StringTemplates.formatWithIndex(template, ...)
    local st = StringTemplate:new()
    st.template = template
    st.variablePattern = "\\{\\d+}"

    st.variableGetter = function(index, variableName, ...)
        print(variableName)
    end

    return st:format()
end

--- do format
--- @param template string|function the string template
--- @param variablePattern string|function
--- @param variableGetter function
function StringTemplates.format(template, variablePattern, variableGetter, ...)
    local st = StringTemplate:new()
    if (Objs.isFunction(template)) then
        template = st.template()
    end
    st.template = template

    variablePattern = Objs.useValueIfNull(variablePattern, "{}")
    if (Objs.isFunction(variablePattern)) then
        variablePattern = variablePattern
    end
    st.variablePattern = variablePattern

    local index = 0
    local varargs = select(1)
    st.variableGetter = function(matched)
        index = index + 1
        return variableGetter(index, matched, varargs)
    end
    return st:format()
end

--- format with: {}
--- @param template string a string template
--- @vararg any variable args
--- @return string the formatted string
function StringTemplates.formatWithPlaceholder(template, ...)
    local variableGetter = function(index, matched, ...)
        local varargs = select(index)
        if (not varargs == nil) then
            return tostring(varargs[1])
        end
        return ""
    end
    return StringTemplates.format(template, "\\{}", variableGetter, ...)
end

--- format with: {1}, {2}
--- @param template string a string template
--- @vararg any
--- @return string the formatted string
function StringTemplates.formatWithIndex(template, ...)
    local variableGetter = function(index, matched, ...)
        matched = string.gsub(matched, "\\{", "")
        matched = string.gsub(matched, "}", "")

        local argsIndex = tonumber(matched, 10)
        local varargs = select(argsIndex)
        if (not varargs == nil) then
            return tostring(varargs[1])
        end
        return ""
    end
    return StringTemplates.format(template, "\\{\\d+}", variableGetter, ...)
end

return StringTemplates;
